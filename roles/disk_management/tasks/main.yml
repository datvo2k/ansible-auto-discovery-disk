---
- name: Check if disk is already mounted
  mount:
    path: "{{ mount_point }}"
    state: absent
  check_mode: yes
  register: mount_check

- name: Backup existing fstab
  copy:
    src: /etc/fstab
    dest: /etc/fstab.backup.{{ ansible_date_time.epoch }}
    remote_src: yes
  when: create_backup | bool

- name: Check if disk already has a filesystem
  command: "blkid {{ disk_device }}"
  register: existing_filesystem
  failed_when: false
  changed_when: false

- name: Display warning if filesystem exists
  debug:
    msg: "WARNING: Filesystem already exists on {{ disk_device }}. Use force_format=true to overwrite."
  when:
    - existing_filesystem.rc == 0
    - not force_format | bool

- name: Create filesystem on disk
  filesystem:
    fstype: "{{ filesystem_type }}"
    dev: "{{ disk_device }}"
    force: "{{ force_format | bool }}"
    opts: "{{ filesystem_opts if filesystem_opts else omit }}"
  register: filesystem_creation
  when: existing_filesystem.rc != 0 or force_format | bool

- name: Get UUID of the filesystem
  command: "blkid -s UUID -o value {{ disk_device }}"
  register: disk_uuid_result
  changed_when: false
  failed_when: disk_uuid_result.rc != 0

- name: Create mount point directory
  file:
    path: "{{ mount_point }}"
    state: directory
    owner: "{{ mount_point_owner }}"
    group: "{{ mount_point_group }}"
    mode: "{{ mount_point_mode }}"

- name: Mount filesystem temporarily
  mount:
    path: "{{ mount_point }}"
    src: "UUID={{ disk_uuid_result.stdout }}"
    fstype: "{{ filesystem_type }}"
    opts: "{{ mount_options }}"
    state: mounted

- name: Add to fstab for persistent mounting
  mount:
    path: "{{ mount_point }}"
    src: "UUID={{ disk_uuid_result.stdout }}"
    fstype: "{{ filesystem_type }}"
    opts: "{{ mount_options }}"
    state: present
  notify: reload systemd

- name: Verify mount is working
  command: "findmnt {{ mount_point }}"
  register: mount_verify
  changed_when: false

- name: Set filesystem facts
  set_fact:
    disk_uuid: "{{ disk_uuid_result.stdout }}"
    mount_status: "{{ 'mounted' if mount_verify.rc == 0 else 'failed' }}"

- name: Display disk setup results
  debug:
    msg:
      - "Disk setup completed successfully"
      - "Device: {{ disk_device }}"
      - "UUID: {{ disk_uuid }}"
      - "Mount Point: {{ mount_point }}"
      - "Filesystem: {{ filesystem_type }}"
      - "Mount Status: {{ mount_status }}"