# /etc/fstab entry generated by Ansible
# Generated on: {{ ansible_date_time.iso8601 }}
# Host: {{ inventory_hostname }}
# Managed by: Ansible Disk Management Project

{% if fstab_header | default(true) %}
#
# Format: <file system> <mount point> <type> <options> <dump> <pass>
#
# UUID-based mounting (recommended for reliability)
# Generated entries below:
#
{% endif %}

{% if discovered_disks is defined and discovered_disks | length > 0 %}
{% for disk in discovered_disks %}
{% set disk_index = loop.index0 %}
{% set mount_point = mount_points[disk_index] | default(mount_base_path + '/disk' + disk_index|string) %}
{% set filesystem_type = group_disk_config.filesystem | default(disk_config.filesystem | default('ext4')) %}
{% set mount_options = group_disk_config.mount_options | default(disk_config.mount_options | default('defaults')) %}
{% set uuid = filesystem_uuids.results[disk_index].stdout | default('') %}

{% if uuid %}
# Disk {{ disk_index + 1 }}: /dev/{{ disk }} ({{ hostvars[inventory_hostname]['ansible_devices'][disk]['size'] | default('Unknown size') }})
UUID={{ uuid }}	{{ mount_point }}	{{ filesystem_type }}	{{ mount_options }}	{{ dump_option | default('0') }}	{{ pass_option | default('2') }}
{% else %}
# WARNING: UUID not found for /dev/{{ disk }}, using device path (not recommended)
/dev/{{ disk }}1	{{ mount_point }}	{{ filesystem_type }}	{{ mount_options }}	{{ dump_option | default('0') }}	{{ pass_option | default('1') }}
{% endif %}

{% endfor %}
{% endif %}

{% if custom_mounts is defined %}
{% for mount in custom_mounts %}
# Custom mount: {{ mount.description | default('User-defined mount') }}
{% if mount.uuid is defined %}
UUID={{ mount.uuid }}	{{ mount.mount_point }}	{{ mount.filesystem }}	{{ mount.options | default('defaults') }}	{{ mount.dump | default('0') }}	{{ mount.pass | default('2') }}
{% else %}
{{ mount.device }}	{{ mount.mount_point }}	{{ mount.filesystem }}	{{ mount.options | default('defaults') }}	{{ mount.dump | default('0') }}	{{ mount.pass | default('1') }}
{% endif %}
{% endfor %}
{% endif %}

{% if network_mounts is defined %}
# Network mounts
{% for mount in network_mounts %}
# {{ mount.description | default('Network mount') }}
{{ mount.server }}:{{ mount.remote_path }}	{{ mount.mount_point }}	{{ mount.filesystem }}	{{ mount.options | default('defaults') }}	{{ mount.dump | default('0') }}	{{ mount.pass | default('0') }}
{% endfor %}
{% endif %}

{% if swap_devices is defined %}
# Swap devices
{% for swap in swap_devices %}
{% if swap.uuid is defined %}
UUID={{ swap.uuid }}	none	swap	{{ swap.options | default('sw') }}	0	0
{% else %}
{{ swap.device }}	none	swap	{{ swap.options | default('sw') }}	0	0
{% endif %}
{% endfor %}
{% endif %}

{% if bind_mounts is defined %}
# Bind mounts
{% for bind in bind_mounts %}
# {{ bind.description | default('Bind mount') }}
{{ bind.source }}	{{ bind.target }}	none	bind{{ ',' + bind.options if bind.options is defined else '' }}	0	0
{% endfor %}
{% endif %}

{% if tmpfs_mounts is defined %}
# tmpfs mounts (RAM-based filesystems)
{% for tmpfs in tmpfs_mounts %}
# {{ tmpfs.description | default('tmpfs mount') }}
tmpfs	{{ tmpfs.mount_point }}	tmpfs	{{ tmpfs.options | default('defaults,size=1G') }}	0	0
{% endfor %}
{% endif %}

# End of Ansible-managed fstab entries